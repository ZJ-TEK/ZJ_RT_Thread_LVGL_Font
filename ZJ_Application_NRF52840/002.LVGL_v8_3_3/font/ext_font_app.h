/**
 * This file is generated by py_FontMaker generation tools
 * Please DO NOT modify this file
 *
 * author: John
 * github: https://github.com/ZJ-TEK/Py_FontMaker_Beta.git
 */
#ifndef _EXT_FONT_APP_H_
#define _EXT_FONT_APP_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "Font_Lib.h"
#if ICON_FONT_ENABLE
#include "icon_font_def.h"
#endif
#if EMOJI_FONT_ENABLE
#include "emoji_font_def.h"
#endif

#define app_get_font_version()       FONT_LIB_VERSION
#define APP_FONT_SIZE_24             HARMONYOS_SANS_SC_MEDIUM_24_2BPP
#define APP_FULL_FONT_SIZE_24        FULL_HARMONYOS_SANS_SC_MEDIUM_24_2BPP
#define APP_ICON_FONT_SIZE_32        ICON_FONT_32_8BPP
#define APP_EMOJI_FONT_SIZE_32       EMOJI_FONT_32_8BPP
#define APP_INNER_FONT_SIZE_24       INNER_HARMONYOS_SANS_SC_MEDIUM_24_2BPP


typedef enum FONT_TYPE_TAG
{
    HARMONYOS_SANS_SC_MEDIUM_24_2BPP,
    FULL_HARMONYOS_SANS_SC_MEDIUM_24_2BPP,
    ICON_FONT_32_8BPP,
    EMOJI_FONT_32_8BPP,
    FAKE_FONT,
    INNER_HARMONYOS_SANS_SC_MEDIUM_24_2BPP,
    FONT_TYPE_MAX,
}FONT_TYPE;


extern bool app_font_init(void);
extern bool app_font_version_ok(void);
extern FONT_TYPE app_get_font_type(const public_font_t *pFont);
extern public_font_t *app_get_font(FONT_TYPE font_type);

#ifdef __cplusplus
}
#endif

#endif//_EXT_FONT_APP_H_


